#!/usr/bin/env python3
"""
GUI Demo for Browser Agent

This script demonstrates the full GUI functionality including:
- Multi-LLM brain configuration (OpenAI, Claude, Gemini)
- Interactive chat interface with animations
- Browser control and automation
- Task logging and history
- Settings management
"""

import os
import sys

# Add the brouser_agent directory to Python path
sys.path.insert(0, os.path.join(os.path.dirname(__file__), '..'))

from brouser_agent.gui.main_window import main

if __name__ == "__main__":
    print("""
ü§ñ Browser Agent GUI Demo
========================

This demo showcases the complete Browser Agent GUI with:

üß† Multi-LLM Support:
   ‚Ä¢ OpenAI (GPT-3.5, GPT-4, GPT-4 Turbo)
   ‚Ä¢ Claude (Opus, Sonnet, Haiku)
   ‚Ä¢ Gemini (Pro, Pro Vision)

üí¨ Interactive Chat:
   ‚Ä¢ Natural language task requests
   ‚Ä¢ Animated typing responses
   ‚Ä¢ Quick action buttons
   ‚Ä¢ Real-time status updates

üåê Browser Control:
   ‚Ä¢ Automatic browser detection
   ‚Ä¢ Manual and automated control
   ‚Ä¢ Live automation logs
   ‚Ä¢ Screenshot capabilities

üìú Task Management:
   ‚Ä¢ Complete task history
   ‚Ä¢ Filtering and search
   ‚Ä¢ Performance statistics
   ‚Ä¢ Export capabilities

‚öôÔ∏è Settings:
   ‚Ä¢ Comprehensive configuration
   ‚Ä¢ Theme customization
   ‚Ä¢ Security settings
   ‚Ä¢ Performance tuning

Prerequisites:
1. Set environment variables for AI providers:
   export OPENAI_API_KEY="your-openai-key"
   export CLAUDE_API_KEY="your-claude-key"
   export GEMINI_API_KEY="your-gemini-key"

2. Ensure browsers are installed (Chrome, Firefox, etc.)

3. Install dependencies:
   pip install -r requirements.txt

Starting GUI...
""")
    
    main()